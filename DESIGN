Game: StickyBox

StickyBox is a 2D puzzle game developed using JavaFX. The user controls a box that can only move in the left, right, up, and down directions and that cannot change its direction once it starts moving. The box will continue to move until it collides into an obstacle, upon which the user can move the box in a different direction. The user can continue to move the box as such, allowing it to hit obstacle after obstacle until it reaches the final exit. 

The user must lead a box from a start point to an exit through 2 different levels: one normal as detailed above and one with an extra item feature. In the first level, the goal is simply to reach the exit by sticking to obstacles and changing directions. There is usually one (although possibly a few) unique solution to each level of the puzzle.One such solution is revealed by pressing the 'h' key. In level 2 the box must also collect several items by passing through them prior to arriving at the exit. 

The user can control the box using the left, right, up, and down arrow keys. Pressing 'r' will reset the level, pressing 's' will skip the level, and pressing 'h' will show a potential solution to the game. 

In designing this game, I utilized a different class for each game screen that would appear: a screen for the menu, a screen level 1, a screen level 2 (with items feature add on), a lose screen, and a win screen. Level 1 became the model class for all game screens since it contained the default game world, BoxWorld. It contained all initialized obstacles, movement restrictions, and win/lose algorithms. Level 2 extended the level 1 BoxWorld class and had minor changes to include added features, such as different obstacle locations, addition of an item feature that included addition to the screen, removal upon collition, and updates to an item counter, and slightly tweaked game winning requirements. Adding more features in the future will similarly extend the BoxWorld class and add on similar features/additions to the game. 

Additionally, the player was defined by an object called StickyBox, which extended the Rectangle class. JavaFX took care of adding it to the screen and setting its appearance, but functionality had to be added to account for StickyBox's unique movement (which does not allow it to change direction in movement and does not allow it to move in the same direction twice - or else risk colliding into already existing obstacles). In doing so, I added methods that would allow it to have a feature to update and check its movement direction, check its previous direction, get its speed (which is currently held constant through all levels but that can be changed by adding a set method or passing in a different parameter in the constructor), and define its movement based on its current direction and speed. 







